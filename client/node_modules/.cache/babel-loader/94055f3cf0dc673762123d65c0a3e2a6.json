{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\julie\\\\Documents\\\\concordia-bootcamps\\\\final-project\\\\fp\\\\client\\\\src\\\\components\\\\App\\\\components\\\\search\\\\search.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nconst Search = () => {\n  _s();\n\n  const [value, setValue] = useState();\n  const accessToken = useSelector(state => state.auth.token);\n\n  const handleChange = e => {\n    setValue(e.target.value);\n    search();\n  };\n\n  const search = async () => {\n    const options = {\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    };\n    const query = await fetch(`https://api.spotify.com/v1/search?q=${encodeURIComponent(value)}&type=track`, options);\n    const res = await query.json();\n    console.log(res);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    value: value,\n    onChange: handleChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Search, \"bNMllft1olM51ElrroqW03CSN80=\", false, function () {\n  return [useSelector];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/julie/Documents/concordia-bootcamps/final-project/fp/client/src/components/App/components/search/search.jsx"],"names":["React","useState","useSelector","Search","value","setValue","accessToken","state","auth","token","handleChange","e","target","search","options","headers","Authorization","query","fetch","encodeURIComponent","res","json","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,EAAlC;AACA,QAAMK,WAAW,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWC,KAAvB,CAA/B;;AAEA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1BN,IAAAA,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASR,KAAV,CAAR;AACAS,IAAAA,MAAM;AACP,GAHD;;AAKA,QAAMA,MAAM,GAAG,YAAY;AACzB,UAAMC,OAAO,GAAG;AACdC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASV,WAAY;AAAvC;AADK,KAAhB;AAGA,UAAMW,KAAK,GAAG,MAAMC,KAAK,CACtB,uCAAsCC,kBAAkB,CACvDf,KADuD,CAEvD,aAHqB,EAIvBU,OAJuB,CAAzB;AAMA,UAAMM,GAAG,GAAG,MAAMH,KAAK,CAACI,IAAN,EAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACD,GAZD;;AAcA,sBAAO;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEhB,KAA1B;AAAiC,IAAA,QAAQ,EAAEM;AAA3C;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAxBD;;GAAMP,M;UAEgBD,W;;;KAFhBC,M;AA0BN,eAAeA,MAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Search = () => {\r\n  const [value, setValue] = useState();\r\n  const accessToken = useSelector((state) => state.auth.token);\r\n\r\n  const handleChange = (e) => {\r\n    setValue(e.target.value);\r\n    search();\r\n  };\r\n\r\n  const search = async () => {\r\n    const options = {\r\n      headers: { Authorization: `Bearer ${accessToken}` },\r\n    };\r\n    const query = await fetch(\r\n      `https://api.spotify.com/v1/search?q=${encodeURIComponent(\r\n        value\r\n      )}&type=track`,\r\n      options\r\n    );\r\n    const res = await query.json();\r\n    console.log(res);\r\n  };\r\n\r\n  return <input type=\"text\" value={value} onChange={handleChange} />;\r\n};\r\n\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}