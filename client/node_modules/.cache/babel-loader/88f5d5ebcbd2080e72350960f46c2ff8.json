{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\julie\\\\Documents\\\\concordia-bootcamps\\\\final-project\\\\fp\\\\client\\\\src\\\\components\\\\search\\\\searchResults.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nconst SearchResult = () => {\n  _s();\n\n  const searchResult = useSelector(state => state.search.items);\n  const accessToken = useSelector(state => state.auth.token);\n  const id = \"ed48adfba9de53c3e5ed79657dbebe546e620bb4\"; //todo get this from state\n\n  console.log(searchResult);\n\n  const addToQueue = async item => {\n    const options = {\n      method: \"POST\",\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    };\n    const request = await fetch(`https://api.spotify.com/v1/me/player/queue?uri=${item.uri}`, options);\n    const response = await request.json();\n    console.log({\n      addedToQueue: response\n    });\n  };\n\n  if (!searchResult || searchResult === null) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this); // todo loading\n  }\n\n  return searchResult.map(result => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [result.name, \" - \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [result.artists[0].name, \"-\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: result => addToQueue(result),\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  });\n};\n\n_s(SearchResult, \"9FgL3KR5Yg5ir+FzzwzHD73sz/E=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = SearchResult;\nexport default SearchResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResult\");","map":{"version":3,"sources":["C:/Users/julie/Documents/concordia-bootcamps/final-project/fp/client/src/components/search/searchResults.jsx"],"names":["React","useSelector","SearchResult","searchResult","state","search","items","accessToken","auth","token","id","console","log","addToQueue","item","options","method","headers","Authorization","request","fetch","uri","response","json","addedToQueue","map","result","name","artists"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAMC,YAAY,GAAGF,WAAW,CAAEG,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaC,KAAzB,CAAhC;AACA,QAAMC,WAAW,GAAGN,WAAW,CAAEG,KAAD,IAAWA,KAAK,CAACI,IAAN,CAAWC,KAAvB,CAA/B;AACA,QAAMC,EAAE,GAAG,0CAAX,CAHyB,CAG8B;;AACvDC,EAAAA,OAAO,CAACC,GAAR,CAAYT,YAAZ;;AAEA,QAAMU,UAAU,GAAG,MAAOC,IAAP,IAAgB;AACjC,UAAMC,OAAO,GAAG;AACdC,MAAAA,MAAM,EAAE,MADM;AAEdC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASX,WAAY;AAAvC;AAFK,KAAhB;AAKA,UAAMY,OAAO,GAAG,MAAMC,KAAK,CACxB,kDAAiDN,IAAI,CAACO,GAAI,EADlC,EAEzBN,OAFyB,CAA3B;AAIA,UAAMO,QAAQ,GAAG,MAAMH,OAAO,CAACI,IAAR,EAAvB;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEY,MAAAA,YAAY,EAAEF;AAAhB,KAAZ;AACD,GAZD;;AAcA,MAAI,CAACnB,YAAD,IAAiBA,YAAY,KAAK,IAAtC,EAA4C;AAC1C,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP,CAD0C,CACnB;AACxB;;AAED,SAAOA,YAAY,CAACsB,GAAb,CAAkBC,MAAD,IAAY;AAClC,wBACE;AAAA,iBACGA,MAAM,CAACC,IADV,sBACkB;AAAA,mBAAOD,MAAM,CAACE,OAAP,CAAe,CAAf,EAAkBD,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,cADlB,eAEE;AAAQ,QAAA,OAAO,EAAGD,MAAD,IAAYb,UAAU,CAACa,MAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD,GAPM,CAAP;AAQD,CAhCD;;GAAMxB,Y;UACiBD,W,EACDA,W;;;KAFhBC,Y;AAkCN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst SearchResult = () => {\r\n  const searchResult = useSelector((state) => state.search.items);\r\n  const accessToken = useSelector((state) => state.auth.token);\r\n  const id = \"ed48adfba9de53c3e5ed79657dbebe546e620bb4\"; //todo get this from state\r\n  console.log(searchResult);\r\n\r\n  const addToQueue = async (item) => {\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: { Authorization: `Bearer ${accessToken}` },\r\n    };\r\n\r\n    const request = await fetch(\r\n      `https://api.spotify.com/v1/me/player/queue?uri=${item.uri}`,\r\n      options\r\n    );\r\n    const response = await request.json();\r\n    console.log({ addedToQueue: response });\r\n  };\r\n\r\n  if (!searchResult || searchResult === null) {\r\n    return <p>loading</p>; // todo loading\r\n  }\r\n\r\n  return searchResult.map((result) => {\r\n    return (\r\n      <p>\r\n        {result.name} - <span>{result.artists[0].name}-</span>\r\n        <button onClick={(result) => addToQueue(result)}>add</button>\r\n      </p>\r\n    );\r\n  });\r\n};\r\n\r\nexport default SearchResult;\r\n"]},"metadata":{},"sourceType":"module"}